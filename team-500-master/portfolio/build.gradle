// ------------------
// |    Team 500    |
// ------------------

plugins {
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'org.siouan.frontend-jdk11' version '6.0.0'
    id 'jacoco'
    id "org.sonarqube" version "3.3"
}

group = 'nz.ac.canterbury.seng302'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

frontend {
    packageJsonDirectory = file("${projectDir}/src/main/frontend")
    nodeVersion = '16.14.2'
    yarnEnabled = false

    assembleScript = "run build"
    cleanScript = "run clean"
    checkScript = "run prebuild"
}

processResources {
    from ('src/main/frontend/dist') {
        into 'static/frontend'
    }
}

wrapper {
    gradleVersion = '7.4'
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    implementation 'net.devh:grpc-client-spring-boot-starter:2.13.1.RELEASE' // GRPC client dependencies
    implementation 'nz.ac.canterbury.seng302:shared:1.0' // Local package containing .proto files


    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'

    // H2 database
    implementation 'com.h2database:h2:2.1.212'
    // Java Persistence API
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web
//    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.6.4'



    implementation 'com.h2database:h2:2.1.212'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.mariadb.jdbc:mariadb-java-client'
}

test {
    finalizedBy jacocoTestReport
}

// Jacoco test coverage configuration
jacoco {
    toolVersion = "0.8.7"
}

// select what reports Jacoco generates and where to put them
jacocoTestReport {
    reports {
        xml.enabled true
        xml.destination file("${buildDir}/jacoco/test-report.xml")
        csv.enabled false
        html.destination file("${buildDir}/jacoco/html")
    }
}

// Sonarqube specific configuration (task)
sonarqube {
    properties {
        property "sonar.projectKey", "team-500-portfolio"
        property "sonar.projectName", "Team 500 - Portfolio"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.host.url", "https://sonarqube.csse.canterbury.ac.nz"
        property "sonar.login", System.getenv("SONARQUBE_KEY")
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

targetCompatibility = JavaVersion.VERSION_17

processResources.dependsOn(assembleFrontend)
bootRun.dependsOn(assembleFrontend)
clean.dependsOn(cleanFrontend)